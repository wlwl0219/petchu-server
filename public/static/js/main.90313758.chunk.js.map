{"version":3,"sources":["images/usericon.png","homepage/Upload.js","homepage/MyPage.js","images/logo.png","homepage/GridPost.js","homepage/Main.js","homepage/MyPostList.js","homepage/LoginHomePage.js","images/github.jpg","homepage/SignIn.js","homepage/SignUp.js","homepage/LogOutHomePage.js","App.js","reportWebVitals.js","index.js"],"names":["Upload","props","state","file","handleChange","bind","event","this","setState","URL","createObjectURL","target","files","type","onChange","src","React","Component","withRouter","axios","defaults","withCredentials","MyPage","handleInputValue","e","name","value","editUserInfo","email","password","passwordCheck","nickname","petInfo","socialInfo","images","alt","width","height","userinfo","placeholder","className","onClick","GridPost","makeStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","icon","color","classes","GridList","cellHeight","GridListTile","cols","style","ListSubheader","component","totalPostinfo","map","data","thumbnail","title","GridListTileBar","subtitle","author","actionIcon","IconButton","aria-label","id","Main","length","MyPostList","userPostInfo","LoginHomePage","to","logo","path","render","SignIn","key","handleSignin","a","errorMessage","post","then","res","status","handleResponseSuccess","history","go","onSubmit","preventDefault","Button","variant","href","gitlogo","disableElevation","SignUp","handleInputvalue","clickSignUp","username","push","catch","err","console","error","statusText","passwordcheck","errormessage","alertemail","alertpassword","timerID","setInterval","tick","clearInterval","LogOutHomePage","App","isLogin","test","handleMainpost","get","log","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.90313758.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/usericon.041270a8.png\";","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport Axios from \"axios\";\n\nclass Upload extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            file: \"\"\n        }\n\n        this.handleChange = this.handleChange.bind(this)\n\n    }\n    handleChange(event) {\n        this.setState({\n            file: URL.createObjectURL(event.target.files[0])\n        })\n        //썸네일 파일을 어떻게가져오게 하지? post요청??\n    }\n\n    render() {\n        return (\n            <div>\n                <input type=\"file\" onChange={this.handleChange} />\n                <img src={this.state.file} />\n\n            </div>\n        )\n    }\n}\nexport default withRouter(Upload);","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport axios from \"axios\";\nimport images from '../images/usericon.png';\nimport Upload from \"./Upload\";\n\n//변경 완료\naxios.defaults.withCredentials = true;\nclass MyPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: \"\",\n            password: \"\",\n            passwordCheck: \"\",\n            nickname: \"\",\n            petInfo: \"\",\n            socialInfo: \"\"\n        }\n    }\n    handleInputValue = (e) => {\n        this.setState({ ...this.state, [e.target.name]: e.target.value });\n    };\n\n    editUserInfo = () => {\n        this.setState({\n            email: \"\",\n            password: \"\",\n            passwordCheck: \"\",\n            nickname: \"\",\n            petInfo: \"\",\n            socialInfo: \"\"\n        })\n    }\n    // 정보가 입력되지 않았을때 경고 -> 정보 전송\n    //서버에 요청을 보낸다. 200응답을 받으면 그 포스트\n    //content는 프론트 단에서 받아올 이미지를 저장했다가 서버로 보내는 역할\n    //uploadedImg는 서버에서 받아온 정보 저장하는 곳 \n    //   shareImg = () => {\n    //         const [content, setContent] = useState(\"\");\n    //         const [uploadedImg, setUploadedImg] = useState({\n    //           fileName: \"\",\n    //           fillPath: \"\"\n    //         })\n    //     }\n\n    render() {\n        \n        return (\n            <div>\n                <span>\n\n                    <button>\n                        <Upload>이미지 변경</Upload><img src={images} alt='logo' width='50' height='50' />\n                    </button>\n                </span>\n                <div>\n                    <form>\n                        <p><label >닉네임: </label><input type='text' name='nickname' value={this.props.userinfo.nickname} onChange={this.handleInputValue} placeholder='닉네임을 입력하세요'></input></p>\n                        <p><label >소셜 정보: </label><input type='text' name='socialInfo' value={this.props.userinfo.socialInfo} onChange={this.handleInputValue} placeholder='소셜 정보를 입력하세요'></input></p>\n                        <p><label >이메일 주소: </label><input type='text' name='email' value={this.props.userinfo.email} onChange={this.handleInputValue} placeholder='이메일 주소를 입력하세요'></input></p>\n                        <p><label >펫 정보(옵션): </label><input type='checkbox'></input><input name='petInfo' type='text' value={this.props.userinfo.petInfo} onChange={this.handleInputValue} placeholder='반려동물 정보를 입력하세요'></input></p>\n                        <p><label>비밀번호 변경: </label><input type='password' name='password' onChange={this.handleInputValue} placeholder='비밀번호를 입력하세요'></input></p>\n                        <p><label >비밀번호 확인: </label><input type='password' name='passwordCheck'  onChange={this.handleInputValue} placeholder='비밀번호를 다시 입력하세요'></input></p>\n                    </form>\n                    <button className=\"finishediting\" onClick={this.editUserInfo}>수정완료</button>\n                </div>\n\n            </div>\n        )\n    }//mypage 버튼과 수정완료 버튼을 눌렀을때 input='null' 인풋값이 지워지게 만들기 \n}\nexport default withRouter(MyPage);","export default __webpack_public_path__ + \"static/media/logo.f7a7e69a.png\";","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoIcon from '@material-ui/icons/Info';\n\nimport {  withRouter } from \"react-router-dom\";\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-around',\n      overflow: 'hidden',\n      backgroundColor: theme.palette.background.paper,\n    },\n    gridList: {\n      width: 500,\n      height: 450,\n    },\n    icon: {\n      color: 'rgba(255, 255, 255, 0.54)',\n    },\n  }));\n\nclass GridPost extends React.Component {\n  constructor(props){\n    super(props);\n\n  }\n  render(){\n    const { classes } = this.props;\n    return(\n      <div className={classes.root}>\n      <GridList cellHeight={180} className={classes.gridList}>\n        <GridListTile key=\"Subheader\" cols={2} style={{ height: 'auto' }}>\n          <ListSubheader component=\"div\">POST List</ListSubheader>\n        </GridListTile>\n        {this.props.totalPostinfo.map((data) => (\n          <GridListTile key={data.id}>\n            \n            <img src={data.thumbnail} alt={data.title} />\n            \n            <GridListTileBar\n              title={data.title}\n              subtitle={<span>by: {data.author}</span>}\n              actionIcon={\n                <IconButton aria-label={`info about ${data.title}`} className={classes.icon}>\n                  <InfoIcon />\n                </IconButton>\n              }\n            />\n          </GridListTile>\n        ))}\n      </GridList>\n    </div>\n    )\n  }\n}\nexport default withRouter(GridPost);","import React from \"react\";\nimport { Link, Route, withRouter } from \"react-router-dom\";\nimport axios from \"axios\";\nimport GridPost from \"./GridPost\";\nimport { Switch } from \"@material-ui/core\";\naxios.defaults.withCredentials = true;\n\nclass Main extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state ={\n            totalPostinfo:this.props.totalPostinfo,\n        }\n    }\n    render(){\n        \n        return(\n            <div>\n                {this.props.totalPostinfo.length === 0 ?\n                \"POST IS NULL 😜!\"\n            : <GridPost totalPostinfo={this.props.totalPostinfo}/>\n                }\n            </div>\n            \n        )\n    }\n}\nexport default withRouter(Main);","import React from \"react\";\nimport { Link, Route, withRouter } from \"react-router-dom\";\nimport axios from \"axios\";\naxios.defaults.withCredentials = true;\n\nclass MyPostList extends React.Component {\n    constructor(props) {\n        super(props);\n\n       \n    }\n    render(){\n        return(\n            <div>\n               {this.props.userPostInfo.length === 0 ? \n               \"게시글이 없습니다 게시글을 작성해주세요! 😀!\"\n            : this.props.userPostInfo.map( (data) => {\n                return(\n                   <div>으으으으</div> \n                )\n            })}\n            </div>\n        )\n    }\n}\nexport default withRouter(MyPostList);","import React from \"react\";\nimport { withRouter, Link, Route, Switch } from \"react-router-dom\";\nimport axios from \"axios\";\nimport MyPage from \"./MyPage\";\nimport logo from '../images/logo.png';\nimport Main from \"./Main\";\nimport MyPostList from \"./MyPostList\";\naxios.defaults.withCredentials = true;\n//수정\nclass LoginHomePage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      userPostInfo : \"\",\n    };\n  };\n  render() {\n    return (\n      <div>\n        <header>\n        <label>Nick name</label><div>{this.props.userinfo.nickname}</div>\n        <Link to=\"/\">\n                    <button>\n                    <img className=\"logo\" src={logo} width=\"13\" height=\"14\" alt=\"Home\"></img>    \n                    </button>\n                </Link>\n          <Link to=\"/mypage\"><button>MyPage</button></Link>\n\n          <Link to=\"/mypostlist\">\n            <button>My Post List</button>\n          </Link>\n\n          <Link to=\"/writenewpost\"><button>WriteNewPost</button></Link>\n\n        </header>\n        <hr />\n        <main>\n          <Switch>\n\n            <Route  path=\"/mypage\" \n                render={() => {\n                  return <MyPage userinfo={this.props.userinfo}/>\n                }}\n              />\n            <Route \n              path=\"/mypostlist\"\n                render={() => {\n                  <MyPostList userPostInfo={this.state.userPostInfo} id={this.props.id}/>\n                }}\n              />\n          </Switch>\n        </main>\n      </div>\n\n    )\n  }\n}\n\nexport default withRouter(LoginHomePage);","export default __webpack_public_path__ + \"static/media/github.124f9bee.jpg\";","import React from \"react\";\nimport { Link, withRouter, Switch, Route } from \"react-router-dom\";\nimport axios from \"axios\";\nimport logo from \"../images/logo.png\";\nimport gitlogo from \"../images/github.jpg\";\n//import ContainedButtons from \"./ContainedButtons\";\n//import { makeStyles } from '@material-ui/core/styles';\nimport Button from \"@material-ui/core/Button\";\n\naxios.defaults.withCredentials = true;\n//<button type='submit' onClick={this.handleSignin}>Sing In</button>\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errorMessage: \"\",\n    };\n    this.handleInputValue = this.handleInputValue.bind(this);\n    this.handleSignin = this.handleSignin.bind(this);\n  }\n\n  handleInputValue = (key) => (e) => {\n    this.setState({ [key]: e.target.value });\n  };\n\n  handleSignin = async () => {\n    const { email, password } = this.state;\n    if (!email) {\n      return this.setState({ errorMessage: \"Email 을 확인해주세요\" });\n    } else if (!password) {\n      return this.setState({ errorMessage: \"password 을 확인해주세요\" });\n    }\n    await axios\n      .post(\"http://localhost:8001/user/signin\", {\n        email: email,\n        password: password,\n      })\n      .then((res) => {\n        if (res.status === 200) {\n          this.props.handleResponseSuccess();\n        } else {\n          this.props.history.go(0);\n        }\n      });\n  };\n\n  render() {\n    return (\n      <div>\n        <div>\n          <img\n            className=\"logo\"\n            src={logo}\n            width=\"13\"\n            height=\"14\"\n            alt=\"띠용\"\n          ></img>\n        </div>\n        <center>\n          <h1>Sign In!</h1>\n          <form onSubmit={(e) => e.preventDefault()}>\n            <div>\n              <label>Email: </label>{\" \"}\n              <input\n                type=\"email\"\n                onChange={this.handleInputValue(\"email\")}\n              ></input>\n              <br />\n              <label>password: </label>{\" \"}\n              <input\n                type=\"password\"\n                onChange={this.handleInputValue(\"password\")}\n              ></input>\n            </div>\n            <div>\n              <Button\n                variant=\"outlined\"\n                color=\"secondary\"\n                type=\"submit\"\n                onClick={this.handleSignin}\n              >\n                Sign in\n              </Button>\n            </div>\n            <div className=\"alert-box\">{this.state.errorMessage}</div>\n          </form>\n          <hr></hr>\n          <div>\n            <h3>소셜 로그인</h3>\n            <div>\n              <a href=\"https://github.com/login/oauth/authorize?client_id=9a27c45004303e2ce020&redirect_uri=http://localhost:8001/oauth/github\">\n                <img\n                  className=\"logo\"\n                  src={gitlogo}\n                  width=\"100\"\n                  height=\"40\"\n                  alt=\"띠용\"\n                ></img>\n              </a>\n            </div>\n\n            <div>\n              <Button variant=\"contained\" color=\"primary\" disableElevation>\n                <Link to=\"/signup\">회원가입</Link>\n              </Button>\n            </div>\n          </div>\n        </center>\n      </div>\n    );\n  }\n}\nexport default withRouter(SignIn);\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport axios from \"axios\";\naxios.defaults.withCredentials = true;\nclass SignUp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      //회원 정보 가져오기\n      email: \"\",\n      password: \"\",\n      passwordcheck: \"\",\n      username: \"\",\n      nickname: \"\",\n      errormessage: \"\",\n      alertemail: \"\",\n      alertpassword: \"\",\n    };\n    this.clickSignUp = this.clickSignUp.bind(this);\n    this.handleInputvalue = this.handleInputvalue.bind(this);\n  }\n\n  handleInputvalue = (key) => (e) => {\n    this.setState({ [key]: e.target.value }); //\n  };\n\n  //   checkEmail = () => {\n  //     const { email } = this.state;\n  //     axios\n  //       .post(\"http://localhost:8001/user/signup/checkid\", {\n  //         email: email,\n  //       })\n  //       .then((res) => {\n  //         if (res.status === 200) {\n  //           return this.setState({\n  //             alertemail: \"사용 가능한 이메일 입니다.\",\n  //           });\n  //         } else {\n  //           return this.setState({\n  //             alertemail: \"이미 사용중인 이메일 입니다.\",\n  //           });\n  //         }\n  //       });\n  //   };\n  //어떻게 같은지 다른지 확인할 것인가\n  //   checkPasswordAndPassword = () => {\n  //     const { password, passwordcheck } = this.state;\n  //     if (password !== passwordcheck) {\n  //       return this.setState({\n  //         alertpassword: \"비밀번호가 일치하지 않습니다.\",\n  //       });\n  //     } else if (password === passwordcheck) {\n  //       return this.setState({\n  //         alertpassword: \"사용가능한 비밀번호 입니다.\",\n  //       });\n  //     }\n  //   };\n\n  componentDidMount() {\n    this.timerID = setInterval(() => this.tick(), 1000);\n  }\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  tick() {\n    const { email, password, passwordcheck, username, nickname } = this.state;\n    if (!email) {\n      return this.setState({ errorMessage: \"Email 을 확인해주세요\" });\n    } else if (!password) {\n      return this.setState({ errorMessage: \"password 을 확인해주세요\" });\n    } else if (!passwordcheck) {\n      return this.setState({ errorMessage: \"check password 을 확인해주세요\" });\n    } else if (password !== passwordcheck) {\n      return this.setState({ errorMessage: \"비밀번호가 일치하지 않습니다.\" });\n    } else if (!username) {\n      return this.setState({ errorMessage: \"username 을 확인해주세요\" });\n    } else if (!nickname) {\n      return this.setState({ errorMessage: \"nickname 을 확인해주세요\" });\n    } else {\n      return this.setState({ errorMessage: \"\" });\n    }\n  }\n  clickSignUp = async () => {\n    await axios\n      .post(\"http://localhost:8001/user/signup\", {\n        email: this.state.email,\n        password: this.state.password,\n        username: this.state.username,\n        nickname: this.state.nickname,\n      })\n      .then((res) => {\n        this.props.history.push(\"/\");\n      })\n      .catch((err) => console.error(err.statusText));\n  };\n  render() {\n    return (\n      <div>\n        <center>\n          <h1>회원가입</h1>\n        </center>\n        <Link to=\"signup\"></Link>\n        <div>\n          <label>username :</label>\n          <input\n            type=\"input-text\"\n            onChange={this.handleInputvalue(\"username\")}\n            placeholder=\"이름을 입력하세요\"\n          ></input>\n        </div>\n        <div>\n          <label>nickname :</label>\n          <input\n            type=\"input-text\"\n            onChange={this.handleInputvalue(\"nickname\")}\n            placeholder=\"별명을 입력하세요\"\n          ></input>\n        </div>\n        <div>\n          <label>email</label>\n          <input\n            type=\"email\"\n            onChange={this.handleInputvalue(\"email\")}\n            placeholder=\"이메일을 입력하세요\"\n          ></input>\n          <div>{this.state.alertemail}</div>\n          <div>\n            <label>password</label>\n            <input\n              type=\"password\"\n              onChange={this.handleInputvalue(\"password\")}\n              placeholder=\"비밀번호를 입력하세요\"\n            ></input>\n          </div>\n        </div>\n        <label>check password</label>\n        <input\n          type=\"password\"\n          onChange={this.handleInputvalue(\"passwordcheck\")}\n          placeholder=\"비밀번호를 입력하세요\"\n        ></input>\n        <div>{this.state.alertpassword}</div>\n\n        <button onClick={this.clickSignUp}> 회원가입 완료</button>\n        <Link to=\"/login\">로그인을 하세요</Link>\n        <div className=\"alert-box\">{this.state.errorMessage}</div>\n      </div>\n    );\n  }\n}\nexport default withRouter(SignUp);\n","import React from \"react\";\nimport { Link, Switch, Route, Redirect, withRouter } from \"react-router-dom\";\nimport axios from \"axios\";\nimport SignIn from \"./SignIn\";\nimport SignUp from \"./SignUp\";\nimport logo from '../images/logo.png';\nimport Main from \"./Main\";\n\n\n\n\naxios.defaults.withCredentials = true;\n//수정\nclass LogOutHomePage extends React.Component {\n    constructor(props) {\n        super(props);\n\n    }\n    render() {\n        return (\n            <div>\n                <header>\n                    <Link to=\"/\">\n                        <button>\n                            <img className=\"logo\" src={logo} width=\"13\" height=\"14\" alt=\"홈\"></img>\n                        </button>\n                    </Link>\n                    <Link to=\"/signin\"><button>Sign In</button></Link>\n                    <Link to=\"/signup\"><button>Sign Up</button></Link>\n                </header>\n                <hr />\n                <main>\n                    <Switch>\n                        <Route path=\"/signin\"\n                            render={() => {\n                                return <SignIn handleResponseSuccess={this.props.handleResponseSuccess} />\n                            }}\n                        ></Route>\n                        <Route path=\"/signup\"\n                            render={() => {\n                                return <SignUp />\n                            }}\n                        ></Route>\n                    </Switch>\n                </main>\n            </div>\n\n\n        );\n    };\n}\n\nexport default withRouter(LogOutHomePage);","import \"./App.css\";\nimport React from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport LoginHomePage from \"./homepage/LoginHomePage\";\nimport LogOutHomePage from \"./homepage/LogOutHomePage\";\nimport axios from \"axios\";\nimport { withRouter } from \"react-router-dom\";\n\naxios.defaults.withCredentials = true;\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLogin: false,\n      userinfo: null,\n      totalPostinfo: null,\n      test: 0,\n    };\n    this.handleMainpost = this.handleMainpost.bind(this);\n  }\n\n  componentDidMount() {\n    this.handleResponseSuccess();\n  }\n\n  async handleMainpost() {\n    await axios.get(\"http://localhost:8001/post/writeall\").then((res) => {\n      console.log(res.data);\n      this.setState({ totalPostinfo: res.data });\n      this.props.history.push(\"/\");\n    });\n  }\n  async handleResponseSuccess() {\n    await axios.get(\"http://localhost:8001/user/userinfo\").then((res) => {\n      console.log(\"res:\", res);\n      console.log(\"res.data:\", res.data);\n      this.setState({ isLogin: true, userinfo: res.data });\n      console.log(this.state.userinfo);\n      //this.props.history.push(\"/\");\n      this.handleMainpost();\n    });\n  }\n\n  render() {\n    const { isLogin, userinfo } = this.state;\n    return (\n      <div>\n        <Switch>\n          <Route\n            path=\"/\"\n            render={() => {\n              if (isLogin) {\n                return (\n                  <LoginHomePage\n                    totalPostinfo={this.state.totalPostinfo}\n                    userinfo={userinfo}\n                    handleResponseSuccess={this.handleResponseSuccess.bind(\n                      this\n                    )}\n                  ></LoginHomePage>\n                );\n              } else if (!isLogin) {\n                return (\n                  <LogOutHomePage\n                    totalPostinfo={this.state.totalPostinfo}\n                    handleResponseSuccess={this.handleResponseSuccess.bind(\n                      this\n                    )}\n                  ></LogOutHomePage>\n                );\n              }\n            }}\n          />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nReactDOM.render(\n  \n  <BrowserRouter>\n    <App />\n    </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}